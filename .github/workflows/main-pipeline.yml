name: Deployment Pipeline

on:
  push:
    branches: [feature/upload-bundle-to-S3]
    paths-ignore:
      - '**.md'
      
  workflow_dispatch:
  
env:
  working-directory: ./KotlinMMP

jobs:
#  linting:
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v2
#      with:
#        ref: ${{ github.head_ref }}
#
#    - name: Setup Java JDK
#      uses: actions/setup-java@v1
#      with:
#       java-version: '11'
#
#    - name: Check the code with the LINTer
#      run: ./gradlew lint
#      working-directory: ${{env.working-directory}}
#
#  unit-tests:
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v2
#      with:
#        ref: ${{ github.head_ref }}
#
#    - name: Setup Java JDK
#      uses: actions/setup-java@v1
#      with:
#       java-version: '11'
#
#    - name: Unit tests
#      run: ./gradlew test
#      working-directory: ${{env.working-directory}}
#
#  android-ui-tests:
#    runs-on: macos-latest
#
#    steps:
#    - uses: actions/checkout@v2
#      with:
#        ref: ${{ github.head_ref }}
#
#    - name: Setup Java JDK
#      uses: actions/setup-java@v1
#      with:
#       java-version: '11'
#
#    - name: Emulator tests
#      uses: reactivecircus/android-emulator-runner@v2
#      with:
#        api-level: 29
#        script: ./gradlew connectedCheck
#        disable-animations: true
#        working-directory: ${{env.working-directory}}

  android-build-package:
    runs-on: ubuntu-latest
      
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref }}

    - name: Setup Java JDK
      uses: actions/setup-java@v1
      with:
       java-version: '11'

    - name: build release package  (APK)
      run: ./gradlew assembleRelease -PstorePw=${{secrets.ANDROID_KEY_STORE_PASSWORD}} -PkeyPw=${{secrets.ANDROID_KEY_PASSWORD}}
      working-directory: ${{env.working-directory}}

    - name: build release bundle (AAB)
      run: ./gradlew bundleRelease -PstorePw=${{secrets.ANDROID_KEY_STORE_PASSWORD}} -PkeyPw=${{secrets.ANDROID_KEY_PASSWORD}}
      working-directory: ${{env.working-directory}}

    - uses: actions/upload-artifact@v2
      with:
        name: release-apk
        path: ${{env.working-directory}}/androidApp/build/outputs/apk/release/androidApp-release.apk

    - uses: actions/upload-artifact@v2
      with:
        name: release-aab
        path: ${{env.working-directory}}/androidApp/build/outputs/bundle/release/androidApp-release.aab

#  ios-ui-tests:
#    runs-on: 	macos-11
#
#    steps:
#    - uses: actions/checkout@v2
#      with:
#        ref: ${{ github.head_ref }}
#
#    - name: Setup Java JDK
#      uses: actions/setup-java@v1
#      with:
#       java-version: '11'
#
#    - name: Force xcode 13
#      run: sudo xcode-select --switch /Applications/Xcode_13.0.app/Contents/Developer
#
#    - name: Emulator tests
#      run: xcodebuild -workspace iosApp.xcworkspace -scheme iosApp -destination 'platform=iOS Simulator,OS=15.0,name=iPhone 13' clean build test CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO
#      working-directory: ${{env.working-directory}}/iosApp
#
#  ios-build-package:
#    runs-on: macos-11
#
#    env:
#      working-directory: KotlinMMP
#
#    steps:
#    - uses: actions/checkout@v2
#      with:
#        ref: ${{ github.head_ref }}
#
#    - name: Force xcode 13
#      run: sudo xcode-select --switch /Applications/Xcode_13.0.app/Contents/Developer
#
#    - name: Setup Java JDK
#      uses: actions/setup-java@v1
#      with:
#       java-version: '16'
#
#    - name: gradle version
#      run: gradle -v
#
#    - uses: yukiarrr/ios-build-action@v1.4.0
#      with:
#        project-path: ${{env.working-directory}}/iosApp/iosApp.xcodeproj
#        p12-base64: ${{ secrets.P12_CER_BASE64 }}
#        mobileprovision-base64: ${{ secrets.MOBILEPROVISION_BASE64 }}
#        code-signing-identity: ${{ secrets.CODE_SIGNING_IDENTITY }}
#        team-id: ${{ secrets.TEAM_ID }}
#        workspace-path: ${{env.working-directory}}/iosApp/iosApp.xcworkspace
#        certificate-password: ${{ secrets.CERT_PASSWORD }}
#        export-method: development
#        output-path: iosApp.ipa
#
#    - uses: actions/upload-artifact@v2
#      with:
#        name: release-ipa
#        path: iosApp.ipa
#
#  ios-upload-app-center:
#    runs-on: ubuntu-latest
#    needs: [linting, unit-tests, android-ui-tests, android-build-package, ios-ui-tests, ios-build-package]
#
#    steps:
#    - uses: actions/download-artifact@v2
#      with:
#        name: release-ipa
#
#    - name: upload artefact to App Center
#      uses: wzieba/AppCenter-Github-Action@v1
#      with:
#        appName: AND-Digital-Jemison/The-Mobile-App-iOS
#        token: ${{secrets.APP_CENTER_KEY_IOS}}
#        group: Collaborators
#        file: iosApp.ipa
#        notifyTesters: true
#        debug: true

#  android-upload-app-center:
#    runs-on: ubuntu-latest
#    needs: [linting, unit-tests, android-ui-tests, android-build-package, ios-ui-tests, ios-build-package]
#
#    steps:
#    - uses: actions/download-artifact@v2
#      with:
#        name: release-apk
#
#    - name: upload artefact to App Center
#      uses: wzieba/AppCenter-Github-Action@v1
#      with:
#        appName: AND-Digital-Jemison/The-Mobile-App-android
#        token: ${{secrets.APP_CENTER_KEY}}
#        group: Collaborators
#        file: androidApp-release.apk
#        notifyTesters: true
#        debug: true

  upload-android-to-s3:
    runs-on: ubuntu-latest
    needs: [android-build-package]

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: release-aab

    - name: Display structure of downloaded files
      run: ls -R
      working-directory: ./

#     - uses: jakejarvis/s3-sync-action@master
#       with:
#         args: --acl public-read --delete
#       env:
#         AWS_S3_BUCKET: ${{ secrets.AWS_PRODUCTION_BUCKET_NAME }}
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         AWS_REGION: ${{ secrets.AWS_REGION }}
#         SOURCE_DIR: androidApp-release.aab

#  push-to-prod:
#    runs-on: ubuntu-latest
#    needs: [android-upload-app-center, ios-upload-app-center]
#
#    steps:
#    - uses: actions/checkout@v2
#      with:
#        ref: ${{ github.head_ref }}
#        persist-credentials: false
#        fetch-depth: 0
#
#    - uses: ad-m/github-push-action@master
#      with:
#        github_token: ${{ secrets.GITHUB_TOKEN }}
#        branch: prod
    
